### YamlMime:ManagedReference
items:
- uid: WebApplication.Framework.UserCredentials
  commentId: T:WebApplication.Framework.UserCredentials
  id: UserCredentials
  parent: WebApplication.Framework
  children:
  - WebApplication.Framework.UserCredentials.#ctor(System.Web.SessionState.HttpSessionState)
  - WebApplication.Framework.UserCredentials.IsLogged
  langs:
  - csharp
  - vb
  name: UserCredentials
  nameWithType: UserCredentials
  fullName: WebApplication.Framework.UserCredentials
  type: Class
  source:
    id: UserCredentials
    path: D:\Users\Ferran\source\repos\HADSProject\WebApplication\Framework\UserCredentials.cs
    startLine: 8
  assemblies:
  - WebApplication
  namespace: WebApplication.Framework
  syntax:
    content: public class UserCredentials
    content.vb: Public Class UserCredentials
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: WebApplication.Framework.UserCredentials.IsLogged
  commentId: P:WebApplication.Framework.UserCredentials.IsLogged
  id: IsLogged
  parent: WebApplication.Framework.UserCredentials
  langs:
  - csharp
  - vb
  name: IsLogged
  nameWithType: UserCredentials.IsLogged
  fullName: WebApplication.Framework.UserCredentials.IsLogged
  type: Property
  source:
    id: IsLogged
    path: D:\Users\Ferran\source\repos\HADSProject\WebApplication\Framework\UserCredentials.cs
    startLine: 11
  assemblies:
  - WebApplication
  namespace: WebApplication.Framework
  syntax:
    content: public bool IsLogged { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsLogged As Boolean
  overload: WebApplication.Framework.UserCredentials.IsLogged*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WebApplication.Framework.UserCredentials.#ctor(System.Web.SessionState.HttpSessionState)
  commentId: M:WebApplication.Framework.UserCredentials.#ctor(System.Web.SessionState.HttpSessionState)
  id: '#ctor(System.Web.SessionState.HttpSessionState)'
  parent: WebApplication.Framework.UserCredentials
  langs:
  - csharp
  - vb
  name: UserCredentials(HttpSessionState)
  nameWithType: UserCredentials.UserCredentials(HttpSessionState)
  fullName: WebApplication.Framework.UserCredentials.UserCredentials(System.Web.SessionState.HttpSessionState)
  type: Constructor
  source:
    id: .ctor
    path: D:\Users\Ferran\source\repos\HADSProject\WebApplication\Framework\UserCredentials.cs
    startLine: 13
  assemblies:
  - WebApplication
  namespace: WebApplication.Framework
  syntax:
    content: public UserCredentials(HttpSessionState session)
    parameters:
    - id: session
      type: System.Web.SessionState.HttpSessionState
    content.vb: Public Sub New(session As HttpSessionState)
  overload: WebApplication.Framework.UserCredentials.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: WebApplication.Framework
  commentId: N:WebApplication.Framework
  name: WebApplication.Framework
  nameWithType: WebApplication.Framework
  fullName: WebApplication.Framework
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: WebApplication.Framework.UserCredentials.IsLogged*
  commentId: Overload:WebApplication.Framework.UserCredentials.IsLogged
  name: IsLogged
  nameWithType: UserCredentials.IsLogged
  fullName: WebApplication.Framework.UserCredentials.IsLogged
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: WebApplication.Framework.UserCredentials.#ctor*
  commentId: Overload:WebApplication.Framework.UserCredentials.#ctor
  name: UserCredentials
  nameWithType: UserCredentials.UserCredentials
  fullName: WebApplication.Framework.UserCredentials.UserCredentials
- uid: System.Web.SessionState.HttpSessionState
  commentId: T:System.Web.SessionState.HttpSessionState
  parent: System.Web.SessionState
  isExternal: true
  name: HttpSessionState
  nameWithType: HttpSessionState
  fullName: System.Web.SessionState.HttpSessionState
- uid: System.Web.SessionState
  commentId: N:System.Web.SessionState
  isExternal: true
  name: System.Web.SessionState
  nameWithType: System.Web.SessionState
  fullName: System.Web.SessionState
