### YamlMime:ManagedReference
items:
- uid: WebApplication.Utils.UrlUtils
  commentId: T:WebApplication.Utils.UrlUtils
  id: UrlUtils
  parent: WebApplication.Utils
  children:
  - WebApplication.Utils.UrlUtils.ApplicationFolder
  - WebApplication.Utils.UrlUtils.UrlRoot
  - WebApplication.Utils.UrlUtils.VirtualPath
  langs:
  - csharp
  - vb
  name: UrlUtils
  nameWithType: UrlUtils
  fullName: WebApplication.Utils.UrlUtils
  type: Class
  source:
    id: UrlUtils
    path: D:\Users\Ferran\source\repos\HADSProject\WebApplication\Utils\UrlUtils.cs
    startLine: 7
  assemblies:
  - WebApplication
  namespace: WebApplication.Utils
  syntax:
    content: public static class UrlUtils
    content.vb: Public Module UrlUtils
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: WebApplication.Utils.UrlUtils.UrlRoot
  commentId: P:WebApplication.Utils.UrlUtils.UrlRoot
  id: UrlRoot
  parent: WebApplication.Utils.UrlUtils
  langs:
  - csharp
  - vb
  name: UrlRoot
  nameWithType: UrlUtils.UrlRoot
  fullName: WebApplication.Utils.UrlUtils.UrlRoot
  type: Property
  source:
    id: UrlRoot
    path: D:\Users\Ferran\source\repos\HADSProject\WebApplication\Utils\UrlUtils.cs
    startLine: 12
  assemblies:
  - WebApplication
  namespace: WebApplication.Utils
  summary: "\nGets the base part of the URL &apos;http://www.&quot;\n"
  example: []
  syntax:
    content: public static string UrlRoot { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Shared ReadOnly Property UrlRoot As String
  overload: WebApplication.Utils.UrlUtils.UrlRoot*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: WebApplication.Utils.UrlUtils.VirtualPath
  commentId: P:WebApplication.Utils.UrlUtils.VirtualPath
  id: VirtualPath
  parent: WebApplication.Utils.UrlUtils
  langs:
  - csharp
  - vb
  name: VirtualPath
  nameWithType: UrlUtils.VirtualPath
  fullName: WebApplication.Utils.UrlUtils.VirtualPath
  type: Property
  source:
    id: VirtualPath
    path: D:\Users\Ferran\source\repos\HADSProject\WebApplication\Utils\UrlUtils.cs
    startLine: 24
  assemblies:
  - WebApplication
  namespace: WebApplication.Utils
  summary: "\nReturns the Virtual Path.\n"
  remarks: The path will start and end with a /
  example: []
  syntax:
    content: public static string VirtualPath { get; }
    parameters: []
    return:
      type: System.String
      description: ''
    content.vb: Public Shared ReadOnly Property VirtualPath As String
  overload: WebApplication.Utils.UrlUtils.VirtualPath*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: WebApplication.Utils.UrlUtils.ApplicationFolder
  commentId: P:WebApplication.Utils.UrlUtils.ApplicationFolder
  id: ApplicationFolder
  parent: WebApplication.Utils.UrlUtils
  langs:
  - csharp
  - vb
  name: ApplicationFolder
  nameWithType: UrlUtils.ApplicationFolder
  fullName: WebApplication.Utils.UrlUtils.ApplicationFolder
  type: Property
  source:
    id: ApplicationFolder
    path: D:\Users\Ferran\source\repos\HADSProject\WebApplication\Utils\UrlUtils.cs
    startLine: 44
  assemblies:
  - WebApplication
  namespace: WebApplication.Utils
  summary: "\nContains the child folder portion of the path.\n"
  example: []
  syntax:
    content: public static string ApplicationFolder { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Shared ReadOnly Property ApplicationFolder As String
  overload: WebApplication.Utils.UrlUtils.ApplicationFolder*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
references:
- uid: WebApplication.Utils
  commentId: N:WebApplication.Utils
  name: WebApplication.Utils
  nameWithType: WebApplication.Utils
  fullName: WebApplication.Utils
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: WebApplication.Utils.UrlUtils.UrlRoot*
  commentId: Overload:WebApplication.Utils.UrlUtils.UrlRoot
  name: UrlRoot
  nameWithType: UrlUtils.UrlRoot
  fullName: WebApplication.Utils.UrlUtils.UrlRoot
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: WebApplication.Utils.UrlUtils.VirtualPath*
  commentId: Overload:WebApplication.Utils.UrlUtils.VirtualPath
  name: VirtualPath
  nameWithType: UrlUtils.VirtualPath
  fullName: WebApplication.Utils.UrlUtils.VirtualPath
- uid: WebApplication.Utils.UrlUtils.ApplicationFolder*
  commentId: Overload:WebApplication.Utils.UrlUtils.ApplicationFolder
  name: ApplicationFolder
  nameWithType: UrlUtils.ApplicationFolder
  fullName: WebApplication.Utils.UrlUtils.ApplicationFolder
