### YamlMime:ManagedReference
items:
- uid: WebApplication.Framework.Query
  commentId: T:WebApplication.Framework.Query
  id: Query
  parent: WebApplication.Framework
  children:
  - WebApplication.Framework.Query.StudentSubjects
  - WebApplication.Framework.Query.StudentSubjectsTasks
  - WebApplication.Framework.Query.TeacherSubjects
  langs:
  - csharp
  - vb
  name: Query
  nameWithType: Query
  fullName: WebApplication.Framework.Query
  type: Class
  source:
    remote:
      path: WebApplication/Framework/Queries/Query.cs
      branch: FerMod
      repo: git@github.com:FerMod/HADSProject.git
    id: Query
    path: ../WebApplication/Framework/Queries/Query.cs
    startLine: 9
  assemblies:
  - WebApplication
  namespace: WebApplication.Framework
  syntax:
    content: public static class Query
    content.vb: Public Module Query
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: WebApplication.Framework.Query.StudentSubjectsTasks
  commentId: P:WebApplication.Framework.Query.StudentSubjectsTasks
  id: StudentSubjectsTasks
  parent: WebApplication.Framework.Query
  langs:
  - csharp
  - vb
  name: StudentSubjectsTasks
  nameWithType: Query.StudentSubjectsTasks
  fullName: WebApplication.Framework.Query.StudentSubjectsTasks
  type: Property
  source:
    remote:
      path: WebApplication/Framework/Queries/Query.cs
      branch: FerMod
      repo: git@github.com:FerMod/HADSProject.git
    id: StudentSubjectsTasks
    path: ../WebApplication/Framework/Queries/Query.cs
    startLine: 27
  assemblies:
  - WebApplication
  namespace: WebApplication.Framework
  summary: "\nObtain the query string that is used to query all the subjects tasks that the student is enrolled in.\n<p>\nRequired query parameters:\n<table><thead><tr><th>Parameter</th><th>Description</th></tr></thead><tbody><tr><td><code>@email</code></td><td>The student email</td></tr></tbody></table>\n</p>\n"
  example: []
  syntax:
    content: public static string StudentSubjectsTasks { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Shared ReadOnly Property StudentSubjectsTasks As String
  overload: WebApplication.Framework.Query.StudentSubjectsTasks*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: WebApplication.Framework.Query.StudentSubjects
  commentId: P:WebApplication.Framework.Query.StudentSubjects
  id: StudentSubjects
  parent: WebApplication.Framework.Query
  langs:
  - csharp
  - vb
  name: StudentSubjects
  nameWithType: Query.StudentSubjects
  fullName: WebApplication.Framework.Query.StudentSubjects
  type: Property
  source:
    remote:
      path: WebApplication/Framework/Queries/Query.cs
      branch: FerMod
      repo: git@github.com:FerMod/HADSProject.git
    id: StudentSubjects
    path: ../WebApplication/Framework/Queries/Query.cs
    startLine: 59
  assemblies:
  - WebApplication
  namespace: WebApplication.Framework
  summary: "\nObtain the student subjects query string.\n<p>\nRequired query parameters:\n<table><thead><tr><th>Parameter</th><th>Description</th></tr></thead><tbody><tr><td><code>@email</code></td><td>The student email</td></tr></tbody></table>\n</p>\n"
  example: []
  syntax:
    content: public static string StudentSubjects { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Shared ReadOnly Property StudentSubjects As String
  overload: WebApplication.Framework.Query.StudentSubjects*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: WebApplication.Framework.Query.TeacherSubjects
  commentId: P:WebApplication.Framework.Query.TeacherSubjects
  id: TeacherSubjects
  parent: WebApplication.Framework.Query
  langs:
  - csharp
  - vb
  name: TeacherSubjects
  nameWithType: Query.TeacherSubjects
  fullName: WebApplication.Framework.Query.TeacherSubjects
  type: Property
  source:
    remote:
      path: WebApplication/Framework/Queries/Query.cs
      branch: FerMod
      repo: git@github.com:FerMod/HADSProject.git
    id: TeacherSubjects
    path: ../WebApplication/Framework/Queries/Query.cs
    startLine: 82
  assemblies:
  - WebApplication
  namespace: WebApplication.Framework
  summary: "\nObtain the teacher subjects query string.\n<p>\nRequired query parameters:\n<table><thead><tr><th>Parameter</th><th>Description</th></tr></thead><tbody><tr><td><code>@email</code></td><td>The teacher email</td></tr></tbody></table>\n</p>\n"
  example: []
  syntax:
    content: public static string TeacherSubjects { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Shared ReadOnly Property TeacherSubjects As String
  overload: WebApplication.Framework.Query.TeacherSubjects*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
references:
- uid: WebApplication.Framework
  commentId: N:WebApplication.Framework
  name: WebApplication.Framework
  nameWithType: WebApplication.Framework
  fullName: WebApplication.Framework
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: WebApplication.Framework.Query.StudentSubjectsTasks*
  commentId: Overload:WebApplication.Framework.Query.StudentSubjectsTasks
  name: StudentSubjectsTasks
  nameWithType: Query.StudentSubjectsTasks
  fullName: WebApplication.Framework.Query.StudentSubjectsTasks
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: WebApplication.Framework.Query.StudentSubjects*
  commentId: Overload:WebApplication.Framework.Query.StudentSubjects
  name: StudentSubjects
  nameWithType: Query.StudentSubjects
  fullName: WebApplication.Framework.Query.StudentSubjects
- uid: WebApplication.Framework.Query.TeacherSubjects*
  commentId: Overload:WebApplication.Framework.Query.TeacherSubjects
  name: TeacherSubjects
  nameWithType: Query.TeacherSubjects
  fullName: WebApplication.Framework.Query.TeacherSubjects
